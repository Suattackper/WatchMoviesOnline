// Generated by view binder compiler. Do not edit!
package com.example.movieapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.Guideline;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.movieapp.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEditAccountInfoBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final AppCompatButton btnSave;

  @NonNull
  public final TextInputEditText editEmail;

  @NonNull
  public final TextInputEditText editPassword;

  @NonNull
  public final TextInputEditText editPhone;

  @NonNull
  public final Guideline guideline1;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final ImageView imvBack;

  @NonNull
  public final CircleImageView imvUserAvatar;

  @NonNull
  public final TextInputLayout lyEmail;

  @NonNull
  public final TextInputLayout lyPass;

  @NonNull
  public final TextInputLayout lyPhone;

  @NonNull
  public final Toolbar toolbarEditProfile;

  @NonNull
  public final TextView tvChangePass;

  private FragmentEditAccountInfoBinding(@NonNull NestedScrollView rootView,
      @NonNull AppCompatButton btnSave, @NonNull TextInputEditText editEmail,
      @NonNull TextInputEditText editPassword, @NonNull TextInputEditText editPhone,
      @NonNull Guideline guideline1, @NonNull Guideline guideline2, @NonNull ImageView imvBack,
      @NonNull CircleImageView imvUserAvatar, @NonNull TextInputLayout lyEmail,
      @NonNull TextInputLayout lyPass, @NonNull TextInputLayout lyPhone,
      @NonNull Toolbar toolbarEditProfile, @NonNull TextView tvChangePass) {
    this.rootView = rootView;
    this.btnSave = btnSave;
    this.editEmail = editEmail;
    this.editPassword = editPassword;
    this.editPhone = editPhone;
    this.guideline1 = guideline1;
    this.guideline2 = guideline2;
    this.imvBack = imvBack;
    this.imvUserAvatar = imvUserAvatar;
    this.lyEmail = lyEmail;
    this.lyPass = lyPass;
    this.lyPhone = lyPhone;
    this.toolbarEditProfile = toolbarEditProfile;
    this.tvChangePass = tvChangePass;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEditAccountInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEditAccountInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_edit_account_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEditAccountInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSave;
      AppCompatButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.editEmail;
      TextInputEditText editEmail = ViewBindings.findChildViewById(rootView, id);
      if (editEmail == null) {
        break missingId;
      }

      id = R.id.editPassword;
      TextInputEditText editPassword = ViewBindings.findChildViewById(rootView, id);
      if (editPassword == null) {
        break missingId;
      }

      id = R.id.editPhone;
      TextInputEditText editPhone = ViewBindings.findChildViewById(rootView, id);
      if (editPhone == null) {
        break missingId;
      }

      id = R.id.guideline1;
      Guideline guideline1 = ViewBindings.findChildViewById(rootView, id);
      if (guideline1 == null) {
        break missingId;
      }

      id = R.id.guideline2;
      Guideline guideline2 = ViewBindings.findChildViewById(rootView, id);
      if (guideline2 == null) {
        break missingId;
      }

      id = R.id.imvBack;
      ImageView imvBack = ViewBindings.findChildViewById(rootView, id);
      if (imvBack == null) {
        break missingId;
      }

      id = R.id.imvUserAvatar;
      CircleImageView imvUserAvatar = ViewBindings.findChildViewById(rootView, id);
      if (imvUserAvatar == null) {
        break missingId;
      }

      id = R.id.lyEmail;
      TextInputLayout lyEmail = ViewBindings.findChildViewById(rootView, id);
      if (lyEmail == null) {
        break missingId;
      }

      id = R.id.lyPass;
      TextInputLayout lyPass = ViewBindings.findChildViewById(rootView, id);
      if (lyPass == null) {
        break missingId;
      }

      id = R.id.lyPhone;
      TextInputLayout lyPhone = ViewBindings.findChildViewById(rootView, id);
      if (lyPhone == null) {
        break missingId;
      }

      id = R.id.toolbarEditProfile;
      Toolbar toolbarEditProfile = ViewBindings.findChildViewById(rootView, id);
      if (toolbarEditProfile == null) {
        break missingId;
      }

      id = R.id.tvChangePass;
      TextView tvChangePass = ViewBindings.findChildViewById(rootView, id);
      if (tvChangePass == null) {
        break missingId;
      }

      return new FragmentEditAccountInfoBinding((NestedScrollView) rootView, btnSave, editEmail,
          editPassword, editPhone, guideline1, guideline2, imvBack, imvUserAvatar, lyEmail, lyPass,
          lyPhone, toolbarEditProfile, tvChangePass);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
