// Generated by view binder compiler. Do not edit!
package com.example.movieapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.movieapp.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final TextView btbtvAnime;

  @NonNull
  public final TextView btbtvPhimBo;

  @NonNull
  public final TextView btbtvPhimLe;

  @NonNull
  public final TextView btbtvTVShows;

  @NonNull
  public final TextView btnAnime;

  @NonNull
  public final MaterialButton btnInfoMovie;

  @NonNull
  public final MaterialButton btnMyList;

  @NonNull
  public final TextView btnPhimBo;

  @NonNull
  public final TextView btnPhimLe;

  @NonNull
  public final TextView btnTVShow;

  @NonNull
  public final ConstraintLayout cstButton;

  @NonNull
  public final ConstraintLayout cstHeader;

  @NonNull
  public final ConstraintLayout cstLayoutListMovie;

  @NonNull
  public final ConstraintLayout cstNav;

  @NonNull
  public final ImageView imvBanner;

  @NonNull
  public final ImageView imvLogoApp;

  @NonNull
  public final ImageView imvUserAvatar;

  @NonNull
  public final LinearLayout playBtn;

  @NonNull
  public final RecyclerView rcvAnime;

  @NonNull
  public final RecyclerView rcvPhimBo;

  @NonNull
  public final RecyclerView rcvPhimLe;

  @NonNull
  public final RecyclerView rcvPhimMoiCatNhat;

  @NonNull
  public final RecyclerView rcvTVShow;

  @NonNull
  public final TextView tvAnime;

  @NonNull
  public final TextView tvPhimBo;

  @NonNull
  public final TextView tvPhimLe;

  @NonNull
  public final TextView tvPhimMoiCatNhat;

  @NonNull
  public final TextView tvTVShows;

  private FragmentHomeBinding(@NonNull NestedScrollView rootView, @NonNull TextView btbtvAnime,
      @NonNull TextView btbtvPhimBo, @NonNull TextView btbtvPhimLe, @NonNull TextView btbtvTVShows,
      @NonNull TextView btnAnime, @NonNull MaterialButton btnInfoMovie,
      @NonNull MaterialButton btnMyList, @NonNull TextView btnPhimBo, @NonNull TextView btnPhimLe,
      @NonNull TextView btnTVShow, @NonNull ConstraintLayout cstButton,
      @NonNull ConstraintLayout cstHeader, @NonNull ConstraintLayout cstLayoutListMovie,
      @NonNull ConstraintLayout cstNav, @NonNull ImageView imvBanner, @NonNull ImageView imvLogoApp,
      @NonNull ImageView imvUserAvatar, @NonNull LinearLayout playBtn,
      @NonNull RecyclerView rcvAnime, @NonNull RecyclerView rcvPhimBo,
      @NonNull RecyclerView rcvPhimLe, @NonNull RecyclerView rcvPhimMoiCatNhat,
      @NonNull RecyclerView rcvTVShow, @NonNull TextView tvAnime, @NonNull TextView tvPhimBo,
      @NonNull TextView tvPhimLe, @NonNull TextView tvPhimMoiCatNhat, @NonNull TextView tvTVShows) {
    this.rootView = rootView;
    this.btbtvAnime = btbtvAnime;
    this.btbtvPhimBo = btbtvPhimBo;
    this.btbtvPhimLe = btbtvPhimLe;
    this.btbtvTVShows = btbtvTVShows;
    this.btnAnime = btnAnime;
    this.btnInfoMovie = btnInfoMovie;
    this.btnMyList = btnMyList;
    this.btnPhimBo = btnPhimBo;
    this.btnPhimLe = btnPhimLe;
    this.btnTVShow = btnTVShow;
    this.cstButton = cstButton;
    this.cstHeader = cstHeader;
    this.cstLayoutListMovie = cstLayoutListMovie;
    this.cstNav = cstNav;
    this.imvBanner = imvBanner;
    this.imvLogoApp = imvLogoApp;
    this.imvUserAvatar = imvUserAvatar;
    this.playBtn = playBtn;
    this.rcvAnime = rcvAnime;
    this.rcvPhimBo = rcvPhimBo;
    this.rcvPhimLe = rcvPhimLe;
    this.rcvPhimMoiCatNhat = rcvPhimMoiCatNhat;
    this.rcvTVShow = rcvTVShow;
    this.tvAnime = tvAnime;
    this.tvPhimBo = tvPhimBo;
    this.tvPhimLe = tvPhimLe;
    this.tvPhimMoiCatNhat = tvPhimMoiCatNhat;
    this.tvTVShows = tvTVShows;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btbtvAnime;
      TextView btbtvAnime = ViewBindings.findChildViewById(rootView, id);
      if (btbtvAnime == null) {
        break missingId;
      }

      id = R.id.btbtvPhimBo;
      TextView btbtvPhimBo = ViewBindings.findChildViewById(rootView, id);
      if (btbtvPhimBo == null) {
        break missingId;
      }

      id = R.id.btbtvPhimLe;
      TextView btbtvPhimLe = ViewBindings.findChildViewById(rootView, id);
      if (btbtvPhimLe == null) {
        break missingId;
      }

      id = R.id.btbtvTVShows;
      TextView btbtvTVShows = ViewBindings.findChildViewById(rootView, id);
      if (btbtvTVShows == null) {
        break missingId;
      }

      id = R.id.btnAnime;
      TextView btnAnime = ViewBindings.findChildViewById(rootView, id);
      if (btnAnime == null) {
        break missingId;
      }

      id = R.id.btnInfoMovie;
      MaterialButton btnInfoMovie = ViewBindings.findChildViewById(rootView, id);
      if (btnInfoMovie == null) {
        break missingId;
      }

      id = R.id.btnMyList;
      MaterialButton btnMyList = ViewBindings.findChildViewById(rootView, id);
      if (btnMyList == null) {
        break missingId;
      }

      id = R.id.btnPhimBo;
      TextView btnPhimBo = ViewBindings.findChildViewById(rootView, id);
      if (btnPhimBo == null) {
        break missingId;
      }

      id = R.id.btnPhimLe;
      TextView btnPhimLe = ViewBindings.findChildViewById(rootView, id);
      if (btnPhimLe == null) {
        break missingId;
      }

      id = R.id.btnTVShow;
      TextView btnTVShow = ViewBindings.findChildViewById(rootView, id);
      if (btnTVShow == null) {
        break missingId;
      }

      id = R.id.cstButton;
      ConstraintLayout cstButton = ViewBindings.findChildViewById(rootView, id);
      if (cstButton == null) {
        break missingId;
      }

      id = R.id.cstHeader;
      ConstraintLayout cstHeader = ViewBindings.findChildViewById(rootView, id);
      if (cstHeader == null) {
        break missingId;
      }

      id = R.id.cstLayoutListMovie;
      ConstraintLayout cstLayoutListMovie = ViewBindings.findChildViewById(rootView, id);
      if (cstLayoutListMovie == null) {
        break missingId;
      }

      id = R.id.cstNav;
      ConstraintLayout cstNav = ViewBindings.findChildViewById(rootView, id);
      if (cstNav == null) {
        break missingId;
      }

      id = R.id.imvBanner;
      ImageView imvBanner = ViewBindings.findChildViewById(rootView, id);
      if (imvBanner == null) {
        break missingId;
      }

      id = R.id.imvLogoApp;
      ImageView imvLogoApp = ViewBindings.findChildViewById(rootView, id);
      if (imvLogoApp == null) {
        break missingId;
      }

      id = R.id.imvUserAvatar;
      ImageView imvUserAvatar = ViewBindings.findChildViewById(rootView, id);
      if (imvUserAvatar == null) {
        break missingId;
      }

      id = R.id.playBtn;
      LinearLayout playBtn = ViewBindings.findChildViewById(rootView, id);
      if (playBtn == null) {
        break missingId;
      }

      id = R.id.rcvAnime;
      RecyclerView rcvAnime = ViewBindings.findChildViewById(rootView, id);
      if (rcvAnime == null) {
        break missingId;
      }

      id = R.id.rcvPhimBo;
      RecyclerView rcvPhimBo = ViewBindings.findChildViewById(rootView, id);
      if (rcvPhimBo == null) {
        break missingId;
      }

      id = R.id.rcvPhimLe;
      RecyclerView rcvPhimLe = ViewBindings.findChildViewById(rootView, id);
      if (rcvPhimLe == null) {
        break missingId;
      }

      id = R.id.rcvPhimMoiCatNhat;
      RecyclerView rcvPhimMoiCatNhat = ViewBindings.findChildViewById(rootView, id);
      if (rcvPhimMoiCatNhat == null) {
        break missingId;
      }

      id = R.id.rcvTVShow;
      RecyclerView rcvTVShow = ViewBindings.findChildViewById(rootView, id);
      if (rcvTVShow == null) {
        break missingId;
      }

      id = R.id.tvAnime;
      TextView tvAnime = ViewBindings.findChildViewById(rootView, id);
      if (tvAnime == null) {
        break missingId;
      }

      id = R.id.tvPhimBo;
      TextView tvPhimBo = ViewBindings.findChildViewById(rootView, id);
      if (tvPhimBo == null) {
        break missingId;
      }

      id = R.id.tvPhimLe;
      TextView tvPhimLe = ViewBindings.findChildViewById(rootView, id);
      if (tvPhimLe == null) {
        break missingId;
      }

      id = R.id.tvPhimMoiCatNhat;
      TextView tvPhimMoiCatNhat = ViewBindings.findChildViewById(rootView, id);
      if (tvPhimMoiCatNhat == null) {
        break missingId;
      }

      id = R.id.tvTVShows;
      TextView tvTVShows = ViewBindings.findChildViewById(rootView, id);
      if (tvTVShows == null) {
        break missingId;
      }

      return new FragmentHomeBinding((NestedScrollView) rootView, btbtvAnime, btbtvPhimBo,
          btbtvPhimLe, btbtvTVShows, btnAnime, btnInfoMovie, btnMyList, btnPhimBo, btnPhimLe,
          btnTVShow, cstButton, cstHeader, cstLayoutListMovie, cstNav, imvBanner, imvLogoApp,
          imvUserAvatar, playBtn, rcvAnime, rcvPhimBo, rcvPhimLe, rcvPhimMoiCatNhat, rcvTVShow,
          tvAnime, tvPhimBo, tvPhimLe, tvPhimMoiCatNhat, tvTVShows);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
