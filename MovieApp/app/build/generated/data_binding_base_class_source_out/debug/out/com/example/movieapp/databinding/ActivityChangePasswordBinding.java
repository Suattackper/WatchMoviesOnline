// Generated by view binder compiler. Do not edit!
package com.example.movieapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.movieapp.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChangePasswordBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton btnChange;

  @NonNull
  public final TextInputEditText editPasswordCur;

  @NonNull
  public final TextInputEditText editPasswordNew;

  @NonNull
  public final TextInputEditText editPasswordNewConfirm;

  @NonNull
  public final AppCompatImageView imvLogoApp;

  @NonNull
  public final ConstraintLayout lyDescIntro;

  @NonNull
  public final ConstraintLayout lySigninAuth;

  @NonNull
  public final LinearLayout lyToolbar;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final TextView txtChangePass;

  @NonNull
  public final AppCompatTextView txtCreateAcc;

  @NonNull
  public final AppCompatTextView txtForgotPass;

  private ActivityChangePasswordBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton btnChange, @NonNull TextInputEditText editPasswordCur,
      @NonNull TextInputEditText editPasswordNew, @NonNull TextInputEditText editPasswordNewConfirm,
      @NonNull AppCompatImageView imvLogoApp, @NonNull ConstraintLayout lyDescIntro,
      @NonNull ConstraintLayout lySigninAuth, @NonNull LinearLayout lyToolbar,
      @NonNull LinearLayout main, @NonNull TextView txtChangePass,
      @NonNull AppCompatTextView txtCreateAcc, @NonNull AppCompatTextView txtForgotPass) {
    this.rootView = rootView;
    this.btnChange = btnChange;
    this.editPasswordCur = editPasswordCur;
    this.editPasswordNew = editPasswordNew;
    this.editPasswordNewConfirm = editPasswordNewConfirm;
    this.imvLogoApp = imvLogoApp;
    this.lyDescIntro = lyDescIntro;
    this.lySigninAuth = lySigninAuth;
    this.lyToolbar = lyToolbar;
    this.main = main;
    this.txtChangePass = txtChangePass;
    this.txtCreateAcc = txtCreateAcc;
    this.txtForgotPass = txtForgotPass;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChangePasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChangePasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_change_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChangePasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnChange;
      AppCompatButton btnChange = ViewBindings.findChildViewById(rootView, id);
      if (btnChange == null) {
        break missingId;
      }

      id = R.id.editPasswordCur;
      TextInputEditText editPasswordCur = ViewBindings.findChildViewById(rootView, id);
      if (editPasswordCur == null) {
        break missingId;
      }

      id = R.id.editPasswordNew;
      TextInputEditText editPasswordNew = ViewBindings.findChildViewById(rootView, id);
      if (editPasswordNew == null) {
        break missingId;
      }

      id = R.id.editPasswordNewConfirm;
      TextInputEditText editPasswordNewConfirm = ViewBindings.findChildViewById(rootView, id);
      if (editPasswordNewConfirm == null) {
        break missingId;
      }

      id = R.id.imvLogoApp;
      AppCompatImageView imvLogoApp = ViewBindings.findChildViewById(rootView, id);
      if (imvLogoApp == null) {
        break missingId;
      }

      id = R.id.lyDescIntro;
      ConstraintLayout lyDescIntro = ViewBindings.findChildViewById(rootView, id);
      if (lyDescIntro == null) {
        break missingId;
      }

      id = R.id.lySigninAuth;
      ConstraintLayout lySigninAuth = ViewBindings.findChildViewById(rootView, id);
      if (lySigninAuth == null) {
        break missingId;
      }

      id = R.id.lyToolbar;
      LinearLayout lyToolbar = ViewBindings.findChildViewById(rootView, id);
      if (lyToolbar == null) {
        break missingId;
      }

      id = R.id.main;
      LinearLayout main = ViewBindings.findChildViewById(rootView, id);
      if (main == null) {
        break missingId;
      }

      id = R.id.txtChangePass;
      TextView txtChangePass = ViewBindings.findChildViewById(rootView, id);
      if (txtChangePass == null) {
        break missingId;
      }

      id = R.id.txtCreateAcc;
      AppCompatTextView txtCreateAcc = ViewBindings.findChildViewById(rootView, id);
      if (txtCreateAcc == null) {
        break missingId;
      }

      id = R.id.txtForgotPass;
      AppCompatTextView txtForgotPass = ViewBindings.findChildViewById(rootView, id);
      if (txtForgotPass == null) {
        break missingId;
      }

      return new ActivityChangePasswordBinding((ConstraintLayout) rootView, btnChange,
          editPasswordCur, editPasswordNew, editPasswordNewConfirm, imvLogoApp, lyDescIntro,
          lySigninAuth, lyToolbar, main, txtChangePass, txtCreateAcc, txtForgotPass);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
